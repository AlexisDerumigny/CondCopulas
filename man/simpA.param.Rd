% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simpA.param.R
\name{simpA.param}
\alias{simpA.param}
\title{Semiparametric testing of the simplifying assumption}
\usage{
simpA.param(
  X1,
  X2,
  X3,
  family,
  testStat = "T2c",
  typeBoot = "boot.NP",
  h,
  nBootstrap = 100,
  kernel.name = "Epanechnikov",
  truncVal = h,
  numericalInt = list(kind = "legendre", nGrid = 10)
)
}
\arguments{
\item{X1}{observed vector of the first conditionned variable}

\item{X2}{observed vector of the second conditionned variable}

\item{X3}{observed vector of the conditioning variable}

\item{family}{the chosen family of copulas
(see the documentation of the class \code{VineCopula::\link[VineCopula]{BiCop}()}
for the available families).}

\item{testStat}{name of the test statistic to be used}

\item{typeBoot}{the type of bootstrap to be used}

\item{h}{the bandwidth used for kernel smoothing}

\item{nBootstrap}{number of bootstrap replications}

\item{kernel.name}{the name of the kernel}

\item{truncVal}{the value of truncation for the integral,
i.e. the integrals are computed from \code{truncVal} to \code{1-truncVal}
instead of from 0 to 1.}

\item{numericalInt}{parameters to be given to
\code{statmod::\link[statmod]{gauss.quad}}, including the number of
quadrature points and the type of interpolation.}
}
\value{
a list containing
\itemize{
    \item \code{true_stat}: the value of the test statistic computed on the whole sample
    \item \code{vect_statB}: a vector of length \code{nBootstrap} containing the bootstrapped
    test statistics.
    \item \code{p_val}: the p-value of the test.
}
}
\description{
Semiparametric testing of the simplifying assumption
}
\examples{
# We simulate from a conditional copula
set.seed(1)
N = 800
Z = rnorm(n = N, mean = 5, sd = 2)
conditionalTau = -0.9 + 1.8 * pnorm(Z, mean = 5, sd = 2)
simCopula = VineCopula::BiCopSim(N=N , family = 1,
    par = VineCopula::BiCopTau2Par(1 , conditionalTau ))
X1 = qnorm(simCopula[,1], mean = Z)
X2 = qnorm(simCopula[,2], mean = - Z)

result <- simpA.param(
   X1 = X1, X2 = X2, X3 = Z, family = 1,
   h = 0.03, kernel.name = "Epanechnikov")
print(result$p_val)

\donttest{
set.seed(1)
N = 500
Z = rnorm(n = N, mean = 5, sd = 2)
conditionalTau = 0.8
simCopula = VineCopula::BiCopSim(N=N , family = 1,
    par = VineCopula::BiCopTau2Par(1 , conditionalTau ))
X1 = qnorm(simCopula[,1], mean = Z)
X2 = qnorm(simCopula[,2], mean = - Z)

result <- simpA.param(
   X1 = X1, X2 = X2, X3 = Z, family = 1,
   h = 0.08, kernel.name = "Epanechnikov", nBootstrap = 30)
print(result$p_val)
}

}
\references{
Derumigny, A., & Fermanian, J. D. (2017).
About tests of the “simplifying” assumption for conditional copulas.
Dependence Modeling, 5(1), 154-197.
}
