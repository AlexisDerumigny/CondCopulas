% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bCond.estimation.R
\name{bCond.pobs}
\alias{bCond.pobs}
\title{Computing the pseudo-observations in case of discrete
conditioning events}
\usage{
bCond.pobs(X1, X2, partition)
}
\arguments{
\item{X1}{vector of \code{n} observations of the first conditioned variable.}

\item{X2}{vector of \code{n} observations of the second conditioned variable.}

\item{partition}{matrix of size \code{n * p},
where \code{p} is the number of conditioning events that are considered.
partition[i,j] should be the indicator of whether the \code{i}-th observation
belongs or not to the \code{j}-th conditioning event.}
}
\value{
a matrix containing the conditional pseudo-observations.
}
\description{
Computing the pseudo-observations in case of discrete
conditioning events
}
\examples{
n = 800
Z = stats::runif(n = n)
CKT = 0.2 * as.numeric(Z <= 0.3) +
  0.5 * as.numeric(Z > 0.3 & Z <= 0.5) +
  - 0.8 * as.numeric(Z > 0.5)
simCopula = VineCopula::BiCopSim(N = n,
  par = VineCopula::BiCopTau2Par(CKT, family = 1), family = 1)
X1 = simCopula[,1]
X2 = simCopula[,2]
partition = cbind(Z <= 0.3, Z > 0.3 & Z <= 0.5, Z > 0.5)
condPseudoObs = bCond.pobs(X1 = X1, X2 = X2, partition = partition)

}
\references{
Derumigny, A., & Fermanian, J. D. (2017).
About tests of the “simplifying” assumption for conditional copulas.
Dependence Modeling, 5(1), 154-197.
}
